"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[446],{3905:function(e,n,t){t.d(n,{Zo:function(){return i},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},i=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},m={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},p=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,i=u(e,["components","mdxType","originalType","parentName"]),p=l(t),d=o,f=p["".concat(s,".").concat(d)]||p[d]||m[d]||a;return t?r.createElement(f,c(c({ref:n},i),{},{components:t})):r.createElement(f,c({ref:n},i))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,c=new Array(a);c[0]=p;var u={};for(var s in n)hasOwnProperty.call(n,s)&&(u[s]=n[s]);u.originalType=e,u.mdxType="string"==typeof e?e:o,c[1]=u;for(var l=2;l<a;l++)c[l]=t[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}p.displayName="MDXCreateElement"},1510:function(e,n,t){t.r(n),t.d(n,{contentTitle:function(){return s},default:function(){return p},frontMatter:function(){return u},metadata:function(){return l},toc:function(){return i}});var r=t(7462),o=t(3366),a=(t(7294),t(3905)),c=["components"],u={},s=void 0,l={unversionedId:"rust\u7b14\u8bb0/SWC\u6e90\u7801/\u6574\u4f53\u7ed3\u6784",id:"rust\u7b14\u8bb0/SWC\u6e90\u7801/\u6574\u4f53\u7ed3\u6784",isDocsHomePage:!1,title:"\u6574\u4f53\u7ed3\u6784",description:"\u642d\u5efa SWC \u8c03\u8bd5\u73af\u5883",source:"@site/docs/rust\u7b14\u8bb0/SWC\u6e90\u7801/01.\u6574\u4f53\u7ed3\u6784.md",sourceDirName:"rust\u7b14\u8bb0/SWC\u6e90\u7801",slug:"/rust\u7b14\u8bb0/SWC\u6e90\u7801/\u6574\u4f53\u7ed3\u6784",permalink:"/docs/rust\u7b14\u8bb0/SWC\u6e90\u7801/\u6574\u4f53\u7ed3\u6784",editUrl:"https://github.com/7213/my-favorite-code-segment/tree/main/docs/docs/rust\u7b14\u8bb0/SWC\u6e90\u7801/01.\u6574\u4f53\u7ed3\u6784.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"\u5b9e\u7528Crate\u5305\uff1asyn\u548cquote",permalink:"/docs/rust\u7b14\u8bb0/\u9644\u5f55:crate\u5305-quote"},next:{title:"\u51fd\u6570",permalink:"/docs/\u6570\u5b66/\u51fd\u6570"}},i=[{value:"\u642d\u5efa SWC \u8c03\u8bd5\u73af\u5883",id:"\u642d\u5efa-swc-\u8c03\u8bd5\u73af\u5883",children:[],level:2},{value:"SWC \u6574\u4f53\u6d41\u7a0b",id:"swc-\u6574\u4f53\u6d41\u7a0b",children:[],level:2}],m={toc:i};function p(e){var n=e.components,t=(0,o.Z)(e,c);return(0,a.kt)("wrapper",(0,r.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"\u642d\u5efa-swc-\u8c03\u8bd5\u73af\u5883"},"\u642d\u5efa SWC \u8c03\u8bd5\u73af\u5883"),(0,a.kt)("p",null,"\u56e0\u4e3a Rust \u5c5e\u4e8e LLVM \u65cf\u8bed\u8a00\uff0c\u4f7f\u7528 LLVM \u5de5\u5177\u94fe\u5373\u53ef\u8c03\u8bd5"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"\u5728 Vscode \u5b89\u88c5Rust\u8c03\u8bd5\u63d2\u4ef6: \u5728\u6269\u5c55\u5546\u5e97\u641c\u7d22 LLDB VSCode \u5e76\u5b89\u88c5"),(0,a.kt)("li",{parentName:"ul"},"Clone SWC\uff0c\u5728 SWC \u4e0b\u65b0\u5efa\u4e00\u4e2a crate debug-swc \u7528\u4e8e\u6211\u4eec\u5199 Demo \u6765\u8c03\u8bd5\u529f\u80fd"),(0,a.kt)("li",{parentName:"ul"},"\u5728 debug-swc \u5305\u4e0b\u65b0\u5efa .vscode/launch.json \u6765\u914d\u7f6e\u8c03\u8bd5\u9009\u9879\uff0c\u4e3b\u8981\u5c06\u6211\u4eec\u7684\u5165\u53e3\u6587\u4ef6\u914d\u7f6e\u6210\u542f\u52a8\u9879")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "version": "0.2.0",\n    "configurations": [\n        {\n            "type": "lldb",\n            "request": "launch",\n            "name": "Debug executable \'debug-swc\'",\n            "cargo": {\n                "args": [\n                    "build",\n                    "--bin=debug-swc",\n                    "--package=debug-swc"\n                ],\n                "filter": {\n                    "name": "debug-swc",\n                    "kind": "bin"\n                }\n            },\n            "args": [],\n            "cwd": "${workspaceFolder}"\n        },\n        {\n            "type": "lldb",\n            "request": "launch",\n            "name": "Debug unit tests in executable \'debug-swc\'",\n            "cargo": {\n                "args": [\n                    "test",\n                    "--no-run",\n                    "--bin=debug-swc",\n                    "--package=debug-swc"\n                ],\n                "filter": {\n                    "name": "debug-swc",\n                    "kind": "bin"\n                }\n            },\n            "args": [],\n            "cwd": "${workspaceFolder}"\n        }\n    ]\n}\n')),(0,a.kt)("p",null,"SWC \u529f\u80fd\u7e41\u591a\uff0c\u76ee\u524d\u6211\u4eec\u5148\u5173\u6ce8\u5bf9\u4e8e TS \u7684\u8f6c\u6362\u8fc7\u7a0b\uff0c\u56de\u5230\u6211\u4eec\u7684\u8c03\u8bd5 Demo:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},'#[macro_use]\nextern crate swc_common;\nextern crate swc_ecma_parser;\nuse std::{env, fs, path::Path, time::Instant};\nuse swc_common::sync::Lrc;\nuse swc_common::{\n    comments::SingleThreadedComments,\n    errors::{ColorConfig, Handler},\n    FileName, FilePathMapping,\n    Globals, Mark, SourceMap, GLOBALS,\n};\nuse swc_ecma_parser::{lexer::Lexer, Parser, StringInput, Syntax, TsConfig};\nuse swc_ecma_codegen::{text_writer::JsWriter, Emitter};\nuse swc_ecma_transforms_typescript::strip;\nuse swc_ecma_visit::FoldWith;\n\nfn main() {\n    let cm: Lrc<SourceMap> = Default::default();\n    \n    // 1.\u751f\u6210\u4e00\u4e2a TS \u6e90\u7801\u6587\u4ef6\n    let fm = cm.new_source_file(\n        FileName::Custom("test.ts".into()),\n        "const i: number = 1;".into(),\n    );\n\n    let comments = SingleThreadedComments::default();\n    \n    // 2. SWC "\u8bcd\u6cd5\u5206\u6790"\u5165\u53e3 \u914d\u7f6e\u8981\u5f00\u542f TS \u5206\u6790\n    let lexer = Lexer::new(\n        Syntax::Typescript(TsConfig {\n            ..Default::default()\n        }),\n        // EsVersion defaults to es5\n        Default::default(),\n        StringInput::from(&*fm),\n        Some(&comments),\n    );\n    \n    // 3. SWC "\u8bed\u6cd5\u5206\u6790"\u5165\u53e3\n    let mut parser = Parser::new_from(lexer);\n    \n    // 4. \u751f\u6210 AST\n    let module = parser\n            .parse_module()\n            .expect("failed to parse input as a module");\n    \n    let globals = Globals::default();\n    GLOBALS.set(&globals, || {\n        let unresolved_mark = Mark::new();\n        let top_level_mark = Mark::new();\n\n\n        // 5. SWC \u5bf9 AST \u8f6c\u6362\u9636\u6bb5\uff0c\u8fd9\u91cc\u53bb\u6389\u6240\u6709\u7684\u7c7b\u578b\u58f0\u660e\n        let module = module.fold_with(&mut strip(top_level_mark));\n\n        let mut buf = vec![];\n        {\n            // 6. SWC \u5f00\u59cb\u751f\u6210\u76ee\u6807\u4ee3\u7801\n            let mut emitter = Emitter {\n                cfg: swc_ecma_codegen::Config {\n                    minify: false,\n                    ..Default::default()\n                },\n                cm: cm.clone(),\n                comments: Some(&comments),\n                wr: JsWriter::new(cm.clone(), "\\n", &mut buf, None),\n            };\n\n            emitter.emit_module(&module).unwrap();\n        }\n\n        println!("{}", String::from_utf8(buf).expect("non-utf8?"));\n    })\n\n}\n')),(0,a.kt)("h2",{id:"swc-\u6574\u4f53\u6d41\u7a0b"},"SWC \u6574\u4f53\u6d41\u7a0b"),(0,a.kt)("p",null,"// todo"))}p.isMDXComponent=!0}}]);